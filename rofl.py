import os
import time
import cv2
import telebot
from tempfile import NamedTemporaryFile
from telebot import types

bot = telebot.TeleBot("You TOKEN")
ADMIN_ID = ID Admin

last_message_time = {}
last_photos = {}
cam_usage_count = {}
usernames = {}

is_bot_active = True
user_commands = ['/start', '/status', '/cam', '/help', '/menu']

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ –∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏
def apply_filter(image):
    return image
    
def save_to_cloud(photo):
    pass

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Å—ä–µ–º–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π. –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –∫–æ–º–∞–Ω–¥—É /cam, —á—Ç–æ–±—ã —Å–¥–µ–ª–∞—Ç—å —Ñ–æ—Ç–æ –∏ –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ. üòä")

@bot.message_handler(commands=['help'])
def send_help(message):
    bot.reply_to(message, "–ù–∞–ø–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /menu, –∏ –≤—ã–±–µ—Ä–∏, —á—Ç–æ —Ç–µ–±–µ –Ω—É–∂–Ω–æ! üòä")

@bot.message_handler(commands=['cam'])
def take_photo(message):
    user_id = message.from_user.id
    username = message.from_user.username
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_id in last_message_time:
        current_time = time.time()
        if current_time - last_message_time[user_id] < 60:
            bot.reply_to(message, "–ü–æ–¥–æ–∂–¥–∏—Ç–µ, –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–π—Ç–∏ –º–∏–Ω—É—Ç–∞. ‚è≥")
            return

    # –í–∫–ª—é—á–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞–º–µ—Ä—É
    cap = cv2.VideoCapture(0)

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–∞–º–µ—Ä—ã
    cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1280)
    cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 720)

    # –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ "–ø—Ä–æ–≥—Ä–µ–≤–∞—é—â–∏—Ö" –∫–∞–¥—Ä–æ–≤
    for i in range(20):
        cap.read()
   
    ret, frame = cap.read()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è –∫–∞–¥—Ä–∞
    if ret:
        filtered_frame = apply_filter(frame)
        with NamedTemporaryFile(delete=False, suffix='.png') as temp_photo:
            cv2.imwrite(temp_photo.name, filtered_frame, [cv2.IMWRITE_PNG_COMPRESSION, 0])
            photo = open(temp_photo.name, 'rb')
            bot.send_photo(message.chat.id, photo)
            last_message_time[user_id] = time.time()
            last_photos[user_id] = temp_photo.name
            cam_usage_count[(user_id, username)] = cam_usage_count.get((user_id, username), 0) + 1
            usernames[user_id] = username
            save_to_cloud(temp_photo.name)
            user_info = f"–ö–æ–º–∞–Ω–¥—É –≤—ã–∑–≤–∞–ª: {message.from_user.first_name} (@{username})"
            bot.send_message(ADMIN_ID, user_info)

    else:
        bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–¥–µ–ª–∞—Ç—å —Å–Ω–∏–º–æ–∫. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑. ‚ùå")

    # –û—Ç–∫–ª—é—á–∞–µ–º –∫–∞–º–µ—Ä—É
    cap.release()

@bot.message_handler(commands=['menu'])
def show_menu(message):
    if message.from_user.id != ADMIN_ID:
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        for command in user_commands:
            markup.add(types.KeyboardButton(command))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É –∏–∑ –º–µ–Ω—é:", reply_markup=markup)
    else:
        bot.reply_to(message, "–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º. ‚ùå")

@bot.message_handler(commands=['stop'])
def stop_bot(message):
    if message.from_user.id == ADMIN_ID:
        bot.reply_to(message, "–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        global is_bot_active
        is_bot_active = False
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. ‚ùå")

@bot.message_handler(commands=['status'])
def bot_status(message):
    if is_bot_active:
        bot.reply_to(message, "–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω.")
    else:
        bot.reply_to(message, "–ë–æ—Ç –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω. ‚ùå")

@bot.message_handler(commands=['panel'])
def show_stats(message):
    if message.from_user.id == ADMIN_ID:
        stats_message = "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã /cam:\n"
        for (user_id, username), count in cam_usage_count.items():
            stats_message += f"@{usernames[user_id]}: {count} —Ä–∞–∑\n"
        bot.reply_to(message, stats_message)
    else:
        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã. ‚ùå")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.polling()
